<?php /** @var M2E_e2M_Block_Adminhtml_Main $this */ ?>

<script type="text/javascript">

    var e2M = {};

    e2M.url = {};
    e2M.url.cronURL = '<?php echo $this->getUrl('*/e2m/cron') ?>';
    e2M.url.beforeEbayGetToken = '<?php echo $this->getUrl('*/e2m/beforeEbayGetToken') ?>';
    e2M.url.deleteEbayToken = '<?php echo $this->getUrl('*/e2m/deleteEbayToken') ?>';
    e2M.url.sendSettings = '<?php echo $this->getUrl('*/e2m/sendSettings') ?>';
    e2M.url.startTaskDownloadInventory = '<?php echo $this->getUrl('*/e2m/startTaskDownloadInventory') ?>';
    e2M.url.startTaskImportInventory = '<?php echo $this->getUrl('*/e2m/startTaskImportInventory') ?>';
    e2M.url.skinURL = '<?php echo $this->getSkinUrl('e2m') ?>';

    e2M.eBayAllFields = JSON.parse('<?php echo $this->getCoreHelper()->jsonEncode($this->getDataHelper()->getEbayAllFields()) ?>');
    e2M.magentoAllAttributes = JSON.parse('<?php echo str_replace("'", '', $this->getCoreHelper()->jsonEncode($this->getDataHelper()->getMagentoAllAttributes())) ?>');
    e2M.fieldAttribute = JSON.parse('<?php if (empty($this->getConfigHelper()->getEbayFieldMagentoAttribute())) { echo '{}'; } else { echo str_replace("'", '', $this->getCoreHelper()->jsonEncode($this->getConfigHelper()->getEbayFieldMagentoAttribute())); } ?>');
</script>

<div class="content-header">
    <table cellspacing="0">
        <tr>
            <td>
                <h3><?php echo $this->getDataHelper()->__('eBay Data Import'); ?></h3>
                <?php if (!empty($this->getAccountHelper()->getUserId())): ?>
                    <div style="float: right">
                        <label><?php echo $this->getDataHelper()->__('eBay User ID'); ?>&nbsp;</label>
                        <span>(<a target="_blank" href="<?php echo $this->getDataHelper()->getMemberUrl($this->getAccountHelper()->getUserId(), $this->getAccountHelper()->getMode()); ?>"><?php echo $this->escapeHtml($this->getAccountHelper()->getUserId()); ?></a>)</span>
                        <span><?php echo $this->getChildHtml('logout_button'); ?></span>
                    </div>
                <?php endif; ?>
            </td>
        </tr>
    </table>
</div>

<?php if (empty($this->getAccountHelper()->getToken())): ?>
    <div class="entry-edit">
        <div class="entry-edit-head">
            <h4><?php echo $this->getDataHelper()->__('Get Access'); ?></h4>
        </div>
        <div class="fieldset">
            <div>
                <table class="form-list" cellspacing="0" cellpadding="0">
                    <tr>
                        <td class="label">
                            <label for="account-mode"><?php echo $this->getDataHelper()->__('Environment'); ?>:<span
                                        class="required">*</span></label>
                        </td>
                        <td class="value" style="width: auto">
                            <select id="account-mode">
                                <option value="<?php echo M2E_e2M_Helper_eBay_Account::MODE_SANDBOX; ?>" <?php if ($this->getAccountHelper()->getMode() === M2E_e2M_Helper_eBay_Account::MODE_SANDBOX): echo ' selected="selected"'; endif; ?>><?php echo $this->getDataHelper()->__('Sandbox (Test)'); ?></option>
                                <option value="<?php echo M2E_e2M_Helper_eBay_Account::MODE_PRODUCTION; ?>" <?php if ($this->getAccountHelper()->getMode() === M2E_e2M_Helper_eBay_Account::MODE_PRODUCTION): echo ' selected="selected"'; endif; ?>><?php echo $this->getDataHelper()->__('Production (Live)'); ?></option>
                            </select>
                        </td>
                    </tr>
                    <tr>
                        <td class="label">
                            <label><?php echo $this->getDataHelper()->__('Grant Access'); ?>:</label>
                        </td>
                        <td class="value" style="width: auto">
                            <?php echo $this->getChildHtml('get_token_button'); ?>
                        </td>
                    </tr>
                </table>
            </div>
        </div>
    </div>
<?php endif; ?>

<?php if (!empty($this->getAccountHelper()->getToken())): ?>
    <div class="entry-edit">
        <header class="entry-edit-head">
            <h4><?php echo $this->getDataHelper()->__('Summary inventory'); ?></h4>
        </header>
        <div class="fieldset">
            <div>
                <table class="form-list" cellspacing="0" cellpadding="0">
                    <tr>
                        <td class="label">
                            <label><?php echo $this->getDataHelper()->__('Total items downloaded'); ?>:</label>
                        </td>
                        <td class="value" style="width: auto">
                            <span id="download-inventory-total-items"><?php echo $this->escapeHtml($this->getInventoryHelper()->getItemsTotal()) ?></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="label">
                            <label><?php echo $this->getDataHelper()->__('Variation items'); ?>:</label>
                        </td>
                        <td class="value" style="width: auto">
                            <span id="download-inventory-variation-items"><?php echo $this->escapeHtml($this->getInventoryHelper()->getItemsVariation()); ?></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="label">
                            <label><?php echo $this->getDataHelper()->__('Simple items'); ?>:</label>
                        </td>
                        <td class="value" style="width: auto">
                            <span id="download-inventory-simple-items"><?php echo $this->escapeHtml($this->getInventoryHelper()->getItemsSimple()); ?></span>
                        </td>
                    </tr>
                    <tr>
                        <td class="label">
                            <?php echo $this->getChildHtml('start_download_inventory_button'); ?>
                        </td>
                        <td class="value block-download-inventory-progress" style="width: auto">
                            <span id="download-inventory-progress"><?php echo $this->escapeHtml($this->getProgressHelper()->getProgressByTag(M2E_e2M_Helper_Data::EBAY_DOWNLOAD_INVENTORY)); ?></span>%
                        </td>
                    </tr>
                    <?php if ($this->getProgressHelper()->isCompletedProgressByTag(M2E_e2M_Helper_Data::EBAY_DOWNLOAD_INVENTORY)): ?>
                        <tr>
                            <td class="label">
                                <?php echo $this->getChildHtml('start_import_inventory_button'); ?>
                            </td>
                            <td class="value block-import-inventory-progress" style="width: auto">
                                <span id="import-inventory-progress"><?php echo $this->escapeHtml($this->getProgressHelper()->getProgressByTag(M2E_e2M_Helper_Data::MAGENTO_IMPORT_INVENTORY)); ?></span>%
                            </td>
                        </tr>
                    <?php endif; ?>
                </table>
            </div>
        </div>
    </div>
<?php endif; ?>

<?php if ($this->getProgressHelper()->isCompletedProgressByTag(M2E_e2M_Helper_Data::EBAY_DOWNLOAD_INVENTORY)): ?>
    <div class="entry-edit">
        <div class="entry-edit-head">
            <h4><?php echo $this->getDataHelper()->__('Marketplace settings'); ?></h4>
        </div>
        <div class="fieldset">
            <table class="form-list" cellspacing="0" cellpadding="0">
                <?php foreach ($this->getInventoryHelper()->getMarketplaces() as $marketplaceId): ?>
                    <tr>
                        <td class="label">
                            <label for="<?php echo $marketplaceId; ?>"><?php echo $this->getDataHelper()->__($this->getDataHelper()->getMarketplaceTitle($marketplaceId)); ?></label>
                        </td>
                        <td class="value" style="width: auto">
                            <select id="<?php echo $marketplaceId; ?>" class="marketplace-store config-input">
                                <option>-- Please Select --</option>
                                <?php foreach ($this->getDataHelper()->getMagentoStores() as $id => $store): ?>
                                    <option value="<?php echo $id; ?>" <?php if ($this->getConfigHelper()->getStoreForMarketplace($marketplaceId) === $id) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__($store); ?></option>
                                <?php endforeach; ?>
                            </select>
                        </td>
                    </tr>
                <?php endforeach; ?>
            </table>
        </div>
    </div>
<?php endif; ?>

<?php if ($this->getProgressHelper()->isCompletedProgressByTag(M2E_e2M_Helper_Data::EBAY_DOWNLOAD_INVENTORY)): ?>
    <div class="entry-edit">
        <div class="entry-edit-head">
            <h4><?php echo $this->getDataHelper()->__('Inventory settings'); ?></h4>
        </div>
        <div class="fieldset">
            <table class="form-list" cellspacing="0" cellpadding="0">
                <tr>
                    <td class="label">
                        <label for="inventory-settings-product-identifier"><?php echo $this->getDataHelper()->__('Product identifier on different marketplaces'); ?>:</label>
                    </td>
                    <td class="value" style="width: auto">
                        <select id="inventory-settings-product-identifier" class="config-input">
                            <option>-- Please Select --</option>
                            <option value="<?php echo M2E_e2M_Helper_eBay_Config::VALUE_SKU_PRODUCT_IDENTIFIER; ?>" <?php if (M2E_e2M_Helper_eBay_Config::VALUE_SKU_PRODUCT_IDENTIFIER === $this->getConfigHelper()->getProductIdentifier()) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('SKU'); ?></option>
                            <option value="<?php echo M2E_e2M_Helper_eBay_Config::VALUE_MPN_PRODUCT_IDENTIFIER; ?>" <?php if (M2E_e2M_Helper_eBay_Config::VALUE_MPN_PRODUCT_IDENTIFIER === $this->getConfigHelper()->getProductIdentifier()) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('MPN'); ?></option>
                            <option value="<?php echo M2E_e2M_Helper_eBay_Config::VALUE_GTIN_PRODUCT_IDENTIFIER; ?>" <?php if (M2E_e2M_Helper_eBay_Config::VALUE_GTIN_PRODUCT_IDENTIFIER === $this->getConfigHelper()->getProductIdentifier()) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('GTIN'); ?></option>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label for="inventory-settings-action-found"><?php echo $this->getDataHelper()->__('Action found a product in Magento inventory'); ?>:</label>
                    </td>
                    <td class="value" style="width: auto">
                        <select id="inventory-settings-action-found" class="config-input">
                            <option>-- Please Select --</option>
                            <option value="<?php echo M2E_e2M_Helper_eBay_Config::VALUE_IGNORE_ACTION_FOUND; ?>" <?php if (M2E_e2M_Helper_eBay_Config::VALUE_IGNORE_ACTION_FOUND === $this->getConfigHelper()->getActionFound()) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('Ignore'); ?></option>
                            <option value="<?php echo M2E_e2M_Helper_eBay_Config::VALUE_UPDATE_ACTION_FOUND; ?>" <?php if (M2E_e2M_Helper_eBay_Config::VALUE_UPDATE_ACTION_FOUND === $this->getConfigHelper()->getActionFound()) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('Update'); ?></option>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label for="import-qty"><?php echo $this->getDataHelper()->__('Create Stock item (Import QTY)') ?>:</label>
                    </td>
                    <td class="value" style="width: auto">
                        <select id="import-qty" class="attribute-set config-input">
                            <option value="1" <?php if ($this->getConfigHelper()->isImportQty() === true) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('Yes'); ?></option>
                            <option value="0" <?php if ($this->getConfigHelper()->isImportQty() === false) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('No'); ?></option>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
            </table>
        </div>
    </div>
<?php endif; ?>

<?php if ($this->getProgressHelper()->isCompletedProgressByTag(M2E_e2M_Helper_Data::EBAY_DOWNLOAD_INVENTORY)): ?>
    <div class="entry-edit">
        <div class="entry-edit-head">
            <h4><?php echo $this->getDataHelper()->__('Product settings'); ?></h4>
        </div>
        <div class="fieldset">
            <table class="form-list" cellspacing="0" cellpadding="0">
                <tr>
                    <td class="label">
                        <label for="import-image"><?php echo $this->getDataHelper()->__('Generate SKU (if empty)') ?>:</label>
                    </td>
                    <td class="value">
                        <select id="import-image" class="attribute-set config-input">
                            <option value="1" <?php if ($this->getConfigHelper()->isImportImage() === true) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('Yes'); ?></option>
                            <option value="0" <?php if ($this->getConfigHelper()->isImportImage() === false) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('No'); ?></option>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label for="import-image"><?php echo $this->getDataHelper()->__('Import image') ?>:</label>
                    </td>
                    <td class="value" style="width: auto">
                        <select id="import-image" class="attribute-set config-input">
                            <option value="1" <?php if ($this->getConfigHelper()->isImportImage() === true) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('Yes'); ?></option>
                            <option value="0" <?php if ($this->getConfigHelper()->isImportImage() === false) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('No'); ?></option>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label for="import-image"><?php echo $this->getDataHelper()->__('Clean HTML in Description') ?>:</label>
                    </td>
                    <td class="value" style="width: auto">
                        <select id="import-image" class="attribute-set config-input">
                            <option value="1" <?php if ($this->getConfigHelper()->isImportImage() === true) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('Yes'); ?></option>
                            <option value="0" <?php if ($this->getConfigHelper()->isImportImage() === false) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__('No'); ?></option>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label for="attribute-set"><?php echo $this->getDataHelper()->__('Attribute Set') ?>:</label>
                    </td>
                    <td class="value" style="width: auto">
                        <select id="attribute-set" class="attribute-set config-input">
                            <option>-- Please Select --</option>
                            <?php foreach ($this->getDataHelper()->getAllAttributeSet() as $id => $title): ?>
                                <option value="<?php echo $id; ?>" <?php if ($this->getConfigHelper()->getAttributeSet() == $id) echo ' selected="selected"'; ?>><?php echo $this->getDataHelper()->__($title); ?></option>
                            <?php endforeach; ?>
                        </select>
                        <p class="note">
                                <span><?php echo Mage::helper('e2m')->__('SKU is a unique identifier for each Item in your catalog. Select Attribute where the SKU values are stored.<br/>
                                                                            <b>Note:</b> SKU is required when you create a new offer on Walmart. Must be less than 50 characters.'); ?>
                                </span>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label><?php echo $this->getDataHelper()->__('List properties'); ?>:</label>
                    </td>
                    <td class="value" style="width: auto">

                        <table class="form-list" cellspacing="0" cellpadding="0">
                            <tr>
                                <td class="label">
                                    <label for="ebay-field"><?php echo $this->getDataHelper()->__('eBay fields'); ?>:</label>
                                </td>
                                <td class="value" style="width: auto">
                                    <label for="magento-attribute"><?php echo $this->getDataHelper()->__('Magento attributes'); ?>:</label>
                                </td>
                            </tr>
                            <tr>
                                <td class="label">
                                    <select id="ebay-field" class="ebay-field-magento-attribute config-input">
                                        <option></option>
                                        <?php foreach ($this->getDataHelper()->getEbayAllFields() as $code => $title): ?>
                                            <option value="<?php echo $code; ?>"><?php echo $this->getDataHelper()->__($title); ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </td>
                                <td class="value" style="width: auto">
                                    <select id="magento-attribute" class="ebay-field-magento-attribute config-input">
                                        <option></option>
                                        <?php foreach ($this->getDataHelper()->getMagentoAllAttributes() as $code => $title): ?>
                                            <option value="<?php echo $code; ?>"><?php echo $this->getDataHelper()->__($title); ?></option>
                                        <?php endforeach; ?>
                                    </select>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
                <tr>
                    <td class="label">
                        <label><?php echo $this->getDataHelper()->__('Import properties'); ?>:</label>
                    </td>
                    <td class="value" style="width: auto">

                        <table class="form-list" cellspacing="0" cellpadding="0">
                            <tr>
                                <td class="value" style="width: auto">
                                    <label for="magento-attribute"><?php echo $this->getDataHelper()->__('Magento attributes'); ?></label>
                                </td>
                                <td class="label">
                                    <label for="ebay-field">&nbsp;/&nbsp;&nbsp;<?php echo $this->getDataHelper()->__('eBay fields'); ?></label>
                                </td>
                            </tr>


                            <tr>
                                <td class="value" style="width: auto">
                                    <div id="field-attribute-list-m"></div>
                                </td>
                                <td class="label">
                                    <div id="field-attribute-list-e"></div>
                                </td>
                            </tr>
                        </table>
                    </td>
                </tr>
            </table>
        </div>
    </div>
<?php endif; ?>

<div <?php if ($this->getConfigHelper()->isFull()): ?> style="display: none" <?php endif; ?> class="config-button">
    <?php echo $this->getChildHtml('send_settings_button'); ?>
</div>
<br <?php if ($this->getConfigHelper()->isFull()): ?> style="display: none" <?php endif; ?> class="config-button"/>

<script>


    MagentoFieldTip = Class.create();
    MagentoFieldTip.prototype = {

        // ---------------------------------------

        initialize: function()
        {
            this.isHideToolTip = false;
        },

        // ---------------------------------------

        onToolTipMouseLeave: function()
        {
            var self = MagentoFieldTipObj;
            var element = this;

            self.isHideToolTip = true;

            setTimeout(function() {
                self.isHideToolTip && element.hide();
            }, 1000);
        },

        onToolTipMouseEnter: function()
        {
            var self = MagentoFieldTipObj;
            self.isHideToolTip = false;
        },

        onToolTipIconMouseLeave: function()
        {
            var self = MagentoFieldTipObj;
            var element = this.up().select('.tool-tip-message')[0];

            self.isHideToolTip = true;

            setTimeout(function() {
                self.isHideToolTip && element.hide();
            }, 1000);
        },

        // ---------------------------------------

        showToolTip: function()
        {
            var self = MagentoFieldTipObj;

            self.isHideToolTip = false;

            $$('.tool-tip-message').each(function(element) {
                element.hide();
            });

            if (this.up().select('.tool-tip-message').length > 0) {
                self.changeToolTipPosition(this);
                this.up().select('.tool-tip-message')[0].show();

                return;
            }

            var isShowLeft = false;
            if (this.up().previous('td').select('p.note')[0].hasClassName('show-left')) {
                isShowLeft = true;
            }

            var tipText = this.up().previous('td').select('p.note')[0].innerHTML;
            var tipWidth = this.up().previous('td').select('p.note')[0].getWidth();
            if (tipWidth > 500) {
                tipWidth = 500;
            }

            var additionalClassName = 'tip-right';
            if (isShowLeft) {
                additionalClassName = 'tip-left';
            }

            var toolTipSpan = new Element('span', {
                'class': 'tool-tip-message ' + additionalClassName
            }).update(tipText).hide();

            if (isShowLeft) {
                toolTipSpan.style.width = tipWidth + 'px';
            }

            var imgUrl = e2M.url.skinURL + '/images/help.png';
            var toolTipImg = new Element('img', {
                'src': imgUrl
            });

            toolTipSpan.insert({top: toolTipImg});
            this.insert({after: toolTipSpan});

            self.changeToolTipPosition(this);

            toolTipSpan.show();

            toolTipSpan.observe('mouseout', self.onToolTipMouseLeave);
            toolTipSpan.observe('mouseover', self.onToolTipMouseEnter);
        },

        // ---------------------------------------

        changeToolTipPosition: function(element)
        {
            var toolTip = element.up().select('.tool-tip-message')[0];

            var settings = {
                setHeight: false,
                setWidth: false,
                setLeft: true,
                offsetTop: 25,
                offsetLeft: 0
            };

            if (element.up().getStyle('float') == 'right') {
                settings.offsetLeft += 18;
            }
            if (element.up().match('span')) {
                settings.offsetLeft += 15;
            }

            toolTip.clonePosition(element, settings);

            if (toolTip.hasClassName('tip-left')) {
                toolTip.style.left = (parseInt(toolTip.style.left) - toolTip.getWidth() - 10) + 'px';
            }
        }

        // ---------------------------------------
    };
    MagentoFieldTipObj = new MagentoFieldTip();






    $$('.ebay-field-magento-attribute').invoke('observe', 'change', function() {

        var ebayField = $('ebay-field');
        var ebayFieldValue = ebayField.options[ebayField.selectedIndex].value;
        if (!ebayFieldValue) {
            return;
        }

        var magentoAttribute = $('magento-attribute');
        var magentoAttributeValue = magentoAttribute.options[magentoAttribute.selectedIndex].value;
        if (!magentoAttributeValue) {
            delete e2M.fieldAttribute[ebayFieldValue];
            return;
        } else {

            e2M.fieldAttribute[ebayFieldValue] = magentoAttributeValue;

            $('magento-attribute').selectedIndex = 0;
            $('ebay-field').selectedIndex = 0;
        }

        paintFieldsAttributes();
    });

    paintFieldsAttributes();

    $$('div.entry-edit').each(function (blockObj) {

        if (blockObj.select('div.entry-edit-head').length === 0) {
            return;
        }

        if (blockObj.readAttribute('magento_block') === 'no') {
            return;
        }

        blockObj.select('div.entry-edit-head')[0].innerHTML = '<div class="entry-edit-head-left" style="float: left; width: 78%;">' + blockObj.select('div.entry-edit-head')[0].innerHTML + '</div>' +
            '<div class="entry-edit-head-right" style="float: right; width: 20%;"></div>';
        MagentoBlockObj.observePrepareStart(blockObj);

        blockObj.select('p.note').each(function(noteElement) {

            if (noteElement.hasClassName('note-no-tool-tip') || noteElement.innerHTML.length <= 0) {
                return;
            }

            if (typeof noteElement.up().next() != "undefined" && noteElement.up().next() != null
                && noteElement.up().next().select('.tool-tip-image').length > 0) {

                return;
            }

            noteElement.hide();

            var toolTipContainer = new Element('td', {
                'class': 'value'
            });

            var imageUrl = e2M.url.skinURL + '/images/tool-tip-icon.png';
            var toolTipImg = new Element('img', {
                'class': 'tool-tip-image',
                'src': imageUrl
            });

            toolTipContainer.insert({top: toolTipImg});

            noteElement.up().insert({after: toolTipContainer});
        });
    });

    $$('.tool-tip-image').each(function(element) {
        element.observe('mouseover', MagentoFieldTipObj.showToolTip);
        element.observe('mouseout', MagentoFieldTipObj.onToolTipIconMouseLeave);
    });

    $$('.tool-tip-message').each(function(element) {
        element.observe('mouseout', MagentoFieldTipObj.onToolTipMouseLeave);
        element.observe('mouseover', MagentoFieldTipObj.onToolTipMouseEnter);
    });


    $$('.config-input').invoke('observe', 'change', function() {
        $$('.config-button').forEach(function (element) {
            console.log('s');
            element.show();
        });
    });
</script>
